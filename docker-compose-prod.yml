version: '3'

services:
  web:
    image: ${ARGOS_DOCKER_IMAGE:?err}
    command:  bash -c "while !</dev/tcp/db/5432; do sleep 1; done; cd argos && gunicorn argos.wsgi:application --bind 0.0.0.0:8000 --timeout 500"
    container_name: argos
    volumes:
      - .:/argos
      - "./argos/pdb_data:/argos/argos/pdb_data"
      - type: bind
        source: $HOME/.OpenEye/
        target: /openeye/

    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`${HOST_DOMAIN:?err}`)"
      - "traefik.http.routers.django.tls=true"
      - "traefik.http.routers.django.tls.certresolver=letsencrypt"


  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    expose:
      - 5432
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:?err}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?err}
      - POSTGRES_DB=${POSTGRES_DB:?err}

  traefik:
    build:
      context: .
      dockerfile: Dockerfile.traefik
    ports:
      - 80:80
      - 443:443
    env_file:
      - .env
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik-public-certificates:/certificates"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik-dashboard.${HOST_DOMAIN:?err}`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_DASHBOARD_USER:?err}:${TRAEFIK_DASHBOARD_HASHED_PWD:?err}"


volumes:
  postgres_data_prod:
  traefik-public-certificates: 
  pdb_data:
